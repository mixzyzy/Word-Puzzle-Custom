<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Word Search Puzzle</title>
  <style>
    /* ‚îÄ‚îÄ Reset & Base Typography ‚îÄ‚îÄ */
    body{margin:0;font-family:Arial,Helvetica,sans-serif;background:#f9f9f9;display:flex;flex-direction:column;min-height:100vh}
    h1,h2,h3{margin:0}

    /* ‚îÄ‚îÄ Fluid title sizes ‚îÄ‚îÄ */
    .title-small{font-size:clamp(18px,3vw,28px);font-weight:600;color:#555}
    .title-main {font-size:clamp(32px,6vw,56px);font-weight:800;color:#333;line-height:1.1}
    .title-tag  {font-size:clamp(14px,2.5vw,22px);font-weight:500;color:#777;margin-top:6px}
    #titleWrap  {text-align:center}

    /* ‚îÄ‚îÄ 1. INTRO SCREEN ‚îÄ‚îÄ */
    #intro-screen{
      flex:1 0 auto;                 /* allow footer to stick at very bottom */
      display:flex;
      justify-content:center;
      align-items:center;
      height:100vh;
      padding:0 20px;
      overflow:hidden;
    }
    #intro-content{
      display:flex;
      flex-direction:column;
      align-items:center;
      gap:28px;
    }

    /* ‚îÄ‚îÄ 2. CUSTOM SCREEN ‚îÄ‚îÄ */
    #custom-screen{
      flex:1 0 auto;
      display:flex;
      flex-direction:column;
      align-items:center;
      justify-content:flex-start;
      gap:28px;
      padding:40px 20px 0;
      min-height:100vh;
      overflow:auto;
      text-align:center;
    }

    /* ---- Buttons & Inputs ---- */
    .start-button{
      padding:18px 38px;font-size:20px;font-weight:600;border:none;border-radius:8px;
      cursor:pointer;box-shadow:0 4px 8px rgba(0,0,0,.15);transition:transform .15s ease
    }
    .start-button:hover{transform:translateY(-2px)}
    #btn-box{display:flex;gap:50px}
    #wordInputs{display:flex;flex-direction:column;gap:12px;max-width:480px;width:100%}
    .page-input label{display:block;font-weight:600;margin-bottom:4px}
    .page-input input{
      width:100%;padding:10px 12px;font-size:16px;border:1px solid #bbb;border-radius:6px
    }

    /* ---- Home Button ---- */
    #homeBtn{
      position:fixed;top:20px;left:20px;display:none;padding:12px 22px;font-size:16px;
      font-weight:600;border:none;border-radius:6px;background:#95a5a6;color:#fff;
      box-shadow:0 4px 8px rgba(0,0,0,.15);cursor:pointer;z-index:2000;
      transition:transform .15s ease
    }
    #homeBtn:hover{transform:translateY(-2px)}

    /* ---- Game Layout ---- */
    #main-container{
      flex:1 0 auto;
      display:none;justify-content:center;align-items:center;gap:60px;padding-top:20px
    }
    #controls{display:flex;flex-direction:column;align-items:center;gap:12px}
    .team-button{
      padding:15px 25px;font-size:18px;cursor:pointer;border:1px solid #aaa;border-radius:5px;
      width:140px;color:#fff
    }
    .team-button.team-a{background:#e74c3c}
    .team-button.team-b{background:#3498db}
    .score{font-size:20px;color:#333}
    .timer{font-size:26px;font-weight:bold;color:#222}
    #grid{display:grid;grid-template-columns:repeat(10,40px);gap:2px;justify-content:center}
    .cell{
      width:40px;height:40px;display:flex;align-items:center;justify-content:center;
      background:#fff;border:1px solid #ccc;cursor:pointer;user-select:none;font-size:18px
    }
    .found{background:rgba(135,206,235,.6)}
    .hint {background:rgba(255,255,0,.45)}
    .team-a{background:rgba(231,76,60,.35)!important}
    .team-b{background:rgba(52,152,219,.35)!important}
    #wordBox{display:flex;justify-content:center;gap:32px;margin-top:24px;align-items:flex-start}
    #wordList{max-width:360px;text-align:left}
    #wordList h3{margin:0 0 8px 0;font-size:22px}
    #wordList ol{column-count:3;column-gap:40px;margin:0;padding-left:24px}
    #wordList li{font-size:18px;line-height:1.5}
    #hintButton{
      align-self:flex-start;padding:12px 22px;font-size:16px;cursor:pointer;background:#eee;
      border:1px solid #aaa;border-radius:5px;height:fit-content
    }
    #pagination{margin:30px auto;text-align:center}
    #pagination button{padding:8px 15px;margin:0 10px;font-size:14px}
    #reloadButton{
      margin-top:15px;padding:10px 20px;font-size:16px;cursor:pointer;display:none
    }

    /* ‚îÄ‚îÄ Footer ‚îÄ‚îÄ */
    footer{
      flex-shrink:0;                  /* keep footer at bottom */
      text-align:center;
      font-size:14px;
      color:#666;
      padding:16px 8px 20px;
    }
    footer .icon{margin-right:4px}
    footer span{margin:0 6px}
  </style>
</head>

<body>
<button id="homeBtn">Home</button>

<!-- ‚ñë‚ñë INTRO SCREEN ‚ñë‚ñë -->
<div id="intro-screen">
  <div id="intro-content">
    <div id="titleWrap">
      <div class="title-small">welcome to the</div>
      <div class="title-main">Word Search Puzzle</div>
      <div class="title-tag">english is easy!</div>
    </div>

    <div id="btn-box">
      <button id="quickBtn"  class="start-button" style="background:#2ecc71;color:#fff">Quick&nbsp;Start</button>
      <button id="customBtn" class="start-button" style="background:#f1c40f;color:#333">Custom</button>
    </div>
  </div>
</div>

<!-- ‚ñë‚ñë CUSTOM SCREEN ‚ñë‚ñë -->
<div id="custom-screen" style="display:none;">
  <h2>Set your words (max 10 per page, comma-separated)</h2>
  <div id="wordInputs"></div>
  <button id="startCustomBtn" class="start-button" style="background:#2ecc71;color:#fff">START</button>
</div>

<!-- ‚ñë‚ñë GAME SCREEN ‚ñë‚ñë -->
<div id="main-container">
  <div id="controls">
    <div class="timer" id="timerA">Time: 60</div>
    <button class="team-button team-a" onclick="selectTeam('A')">Team A</button>
    <div class="score">Score: <span id="scoreA">0</span></div>
  </div>

  <div>
    <div id="grid"></div>
    <div id="wordBox">
      <div id="wordList"></div>
      <button id="hintButton">Hint</button>
    </div>

    <div id="pagination">
      <button onclick="prevPage()">Previous</button>
      <span id="pageLabel">Page 1</span>
      <button onclick="nextPage()">Next</button><br>
      <button id="reloadButton" onclick="reloadGame()">Reload Game</button>
    </div>
  </div>

  <div id="controls">
    <div class="timer" id="timerB">Time: 60</div>
    <button class="team-button team-b" onclick="selectTeam('B')">Team B</button>
    <div class="score">Score: <span id="scoreB">0</span></div>
  </div>
</div>

<!-- ‚ñë‚ñë FOOTER ‚ñë‚ñë -->
<footer>
  creator : <strong>Mixzy Indrajaya</strong><br>
  <span><span class="icon">üîó</span>/mixzyindrajaya</span> |
  <span><span class="icon">‚úâÔ∏è</span>mixzy.indrajaya@gmail.com</span>
</footer>

<script>
/* ---------- Default Word Sets (10 pages) ---------- */
const defaultWordSets=[/* ... same content as before ... */];
let pageData=defaultWordSets.map(words=>({words}));

/* ---------- Game Constants & State ---------- */
const gridSize=10,timers={A:60,B:60},intervals={A:null,B:null};
const directions=[{dx:1,dy:0,delta:1},{dx:0,dy:1,delta:gridSize},{dx:1,dy:1,delta:gridSize+1},{dx:1,dy:-1,delta:-gridSize+1}],
      allowed=directions.map(d=>d.delta),
      NO_MASK=['camel','rhino','chair','fries'],
      OPTIONAL_MISSING=[...NO_MASK];
let page=0,currentTeam=null,scoreA=0,scoreB=0,currentSelection=[],currentWord='',lastIndex=-1,direction=null,foundWords=new Set(),tempGrid;
const gridDiv=document.getElementById('grid');

/* ---------- Navigation / Home ---------- */
const homeBtn=document.getElementById('homeBtn');
homeBtn.onclick=goHome;
function showHomeBtn(f){homeBtn.style.display=f?'block':'none';}
function goHome(){
  document.getElementById('intro-screen').style.display='flex';
  document.getElementById('custom-screen').style.display='none';
  document.getElementById('main-container').style.display='none';
  showHomeBtn(false); currentTeam=null; ['A','B'].forEach(resetTimer);
}

/* ---------- Intro / Custom Flow ---------- */
document.getElementById('quickBtn').onclick=quickStart;
document.getElementById('customBtn').onclick=showCustom;
document.getElementById('startCustomBtn').onclick=startCustom;
function quickStart(){pageData=defaultWordSets.map(words=>({words:[...words]}));
  document.getElementById('intro-screen').style.display='none';
  document.getElementById('main-container').style.display='flex';
  showHomeBtn(true); reloadGame();}
function showCustom(){document.getElementById('intro-screen').style.display='none';
  buildCustomForm(); document.getElementById('custom-screen').style.display='flex'; showHomeBtn(true);}
function buildCustomForm(){const wrap=document.getElementById('wordInputs');wrap.innerHTML='';
  defaultWordSets.forEach((arr,i)=>{wrap.insertAdjacentHTML('beforeend',`
    <div class="page-input">
      <label>Words for page ${i+1}:</label>
      <input type="text" placeholder="${arr.join(',')}" data-page="${i}">
    </div>`);});}
function startCustom(){const lists=[];
  document.querySelectorAll('#wordInputs input').forEach(inp=>{
    const txt=inp.value.trim();
    lists.push(txt?txt.split(',').map(s=>s.trim().toLowerCase()).filter(Boolean).slice(0,10)
                  :defaultWordSets[inp.dataset.page]);});
  pageData=lists.map(words=>({words}));
  document.getElementById('custom-screen').style.display='none';
  document.getElementById('main-container').style.display='flex';
  reloadGame();}

/* ---------- Timer ---------- */
function updateTimerDisplay(t){document.getElementById(`timer${t}`).textContent=`Time: ${String(timers[t]).padStart(2,'0')}`;}
function resetTimer(t){clearInterval(intervals[t]);timers[t]=60;updateTimerDisplay(t);}
function startTimer(t){resetTimer(t);intervals[t]=setInterval(()=>{timers[t]--;updateTimerDisplay(t);
  if(timers[t]<=0){clearInterval(intervals[t]);flashColor('#ffdddd');penalize();resetSelection();const ex=currentTeam;currentTeam=null;resetTimer(ex);}},1000);}

/* ---------- Grid Helpers ---------- */
const randomLetter=()=>String.fromCharCode(65+Math.floor(Math.random()*26));
function canPlace(w,r,c,dir){if(r+dir.dy*(w.length-1)<0||r+dir.dy*(w.length-1)>=gridSize||c+dir.dx*(w.length-1)<0||c+dir.dx*(w.length-1)>=gridSize)return false;
  for(let i=0;i<w.length;i++){const idx=(r+dir.dy*i)*gridSize+(c+dir.dx*i);if(tempGrid[idx]&&tempGrid[idx]!==w[i])return false;}return true;}
function placeWord(w){for(let t=0;t<300;t++){const dir=directions[Math.floor(Math.random()*directions.length)],r=Math.floor(Math.random()*gridSize),c=Math.floor(Math.random()*gridSize);
  if(!canPlace(w,r,c,dir))continue;for(let i=0;i<w.length;i++){const idx=(r+dir.dy*i)*gridSize+(c+dir.dx*i);tempGrid[idx]=w[i];}return true;}return false;}
function generateGrid(arr){tempGrid=new Array(gridSize*gridSize).fill(null);arr.forEach(w=>placeWord(w.toUpperCase()));return tempGrid.map(ch=>ch||randomLetter());}

/* ---------- UI helpers ---------- */
function maskedDisplay(w){if(NO_MASK.includes(w)||w.length<2)return w;const p=Math.floor(Math.random()*w.length);return w.slice(0,p)+'_'+w.slice(p+1);}
function flashColor(c){const o=document.body.style.backgroundColor;document.body.style.backgroundColor=c;setTimeout(()=>document.body.style.backgroundColor=o,300);}
function updateScores(){document.getElementById('scoreA').textContent=scoreA.toFixed(1);document.getElementById('scoreB').textContent=scoreB.toFixed(1);}

/* ---------- Team/Selection ---------- */
function selectTeam(t){currentTeam=t;resetSelection();startTimer(t);}
function resetSelection(){currentSelection.forEach(c=>c.classList.remove('team-a','team-b'));currentSelection=[];currentWord='';lastIndex=-1;direction=null;}
function penalize(){if(currentTeam==='A'){scoreA-=0.5;resetTimer('A');}else if(currentTeam==='B'){scoreB-=0.5;resetTimer('B');}updateScores();}

/* ---------- Word-search Logic ---------- */
function wordExists(w,cells){const target=w.toUpperCase();
  for(let i=0;i<cells.length;i++){for(const d of allowed){let ok=true;
    for(let j=0;j<target.length;j++){const idx=i+j*d;if(idx<0||idx>=cells.length){ok=false;break;}
      if(d===1&&Math.floor(idx/gridSize)!==Math.floor(i/gridSize)){ok=false;break;}
      if(cells[idx].textContent!==target[j]){ok=false;break;}}
    if(ok)return true;}}return false;}
function highlightWord(w,cells){const t=w.toUpperCase();
  for(let i=0;i<cells.length;i++){for(const d of allowed){const pos=[],built=[];
    for(let j=0;j<t.length;j++){const idx=i+j*d;if(idx<0||idx>=cells.length)break;
      if(d===1&&Math.floor(idx/gridSize)!==Math.floor(i/gridSize))break;
      const cell=cells[idx];built.push(cell.textContent);pos.push(cell);}
    if(built.join('')===t){pos.forEach(c=>c.classList.add('found'));return;}}}}
function showHint(){const data=pageData[page],cells=[...gridDiv.children],
  cand=data.words.filter(w=>!foundWords.has(w)&&wordExists(w,cells));
  if(!cand.length)return alert('No more hints');const word=cand[Math.floor(Math.random()*cand.length)].toUpperCase();
  for(let i=0;i<cells.length;i++){for(const d of allowed){const pos=[],built=[];
    for(let j=0;j<word.length;j++){const idx=i+j*d;if(idx<0||idx>=cells.length)break;
      if(d===1&&Math.floor(idx/gridSize)!==Math.floor(i/gridSize))break;
      const cell=cells[idx];built.push(cell.textContent);pos.push(cell);}
    if(built.join('')===word){pos.forEach(c=>c.classList.add('hint'));setTimeout(()=>pos.forEach(c=>c.classList.remove('hint')),1000);return;}}}}

/* ---------- Page Handling ---------- */
function loadPage(){const data=pageData[page];
  if(!data.grid)data.grid=generateGrid(data.words);
  if(!data.foundWords)data.foundWords=new Set();foundWords=data.foundWords;
  OPTIONAL_MISSING.forEach(w=>{if(data.words.includes(w)&&!wordExists(w,[...data.grid])&&!foundWords.has(w))foundWords.add(w);});
  gridDiv.innerHTML='';data.grid.forEach(l=>{const cell=document.createElement('div');cell.className='cell';cell.textContent=l;gridDiv.appendChild(cell);});
  document.getElementById('pageLabel').textContent=`Page ${page+1}`;
  document.getElementById('wordList').innerHTML='<h3>Find These Words:</h3><ol>'+data.words.map(w=>foundWords.has(w)
    ?`<li data-word=\"${w}\"><del>${maskedDisplay(w)}</del></li>`:`<li data-word=\"${w}\">${maskedDisplay(w)}</li>`).join('')+'</ol>';
  const cells=[...gridDiv.children];cells.forEach(c=>c.addEventListener('click',e=>handleClick(e,cells,data.words)));foundWords.forEach(w=>highlightWord(w,cells));
  updateScores();document.getElementById('reloadButton').style.display=page===pageData.length-1?'inline-block':'none';resetSelection();currentTeam=null;resetTimer('A');resetTimer('B');}

/* ---------- Cell Click ---------- */
function handleClick(e,cells,words){
  if(!currentTeam)return alert('Select Team first');
  const cell=e.target,idx=cells.indexOf(cell);if(!cell.textContent.match(/[A-Z]/))return;
  if(lastIndex===-1){currentSelection.push(cell);currentWord+=cell.textContent.toLowerCase();cell.classList.add(currentTeam==='A'?'team-a':'team-b');lastIndex=idx;return;}
  const diff=idx-lastIndex;if(direction===null&&allowed.includes(diff))direction=diff;
  if(idx!==lastIndex+direction){flashColor('#ffdddd');penalize();resetSelection();currentTeam=null;return;}
  currentSelection.push(cell);currentWord+=cell.textContent.toLowerCase();cell.classList.add(currentTeam==='A'?'team-a':'team-b');lastIndex=idx;
  if(!words.some(w=>w.startsWith(currentWord))){flashColor('#ffdddd');penalize();resetSelection();currentTeam=null;return;}
  if(words.includes(currentWord)&&!foundWords.has(currentWord)){flashColor('#ddffdd');
    currentSelection.forEach(c=>c.classList.remove('team-a','team-b'));currentSelection.forEach(c=>c.classList.add('found'));
    foundWords.add(currentWord);[...document.querySelectorAll('#wordList li')].forEach(li=>{if(li.dataset.word===currentWord)li.innerHTML=`<del>${li.textContent}</del>`;});
    if(currentTeam==='A'){scoreA+=1;resetTimer('A');}else{scoreB+=1;resetTimer('B');}
    updateScores();resetSelection();currentTeam=null;}
}

/* ---------- Nav & Reset ---------- */
function nextPage(){page=(page+1)%pageData.length;loadPage();}
function prevPage(){page=(page-1+pageData.length)%pageData.length;loadPage();}
function reloadGame(){scoreA=0;scoreB=0;pageData.forEach(p=>p.foundWords=new Set());page=0;loadPage();}

/* ---------- INIT ---------- */
document.getElementById('hintButton').onclick=showHint;
loadPage();
</script>
</body>
</html>
